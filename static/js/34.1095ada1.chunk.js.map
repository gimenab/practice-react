{"version":3,"sources":["../node_modules/@material-ui/core/esm/Switch/Switch.js","views/CustomerManagementDetails/Summary/CustomerEditModal.js","views/Modals/BaseModal.js","views/Modals/index.js"],"names":["Switch","forwardRef","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","icon","createElement","thumb","root","start","edgeStart","end","edgeEnd","small","concat","type","checkedIcon","switchBase","input","checked","disabled","track","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","useStyles","makeStyles","outline","maxHeight","overflowY","maxWidth","actions","justifyContent","CustomerEditModal","open","onClose","customer","rest","useState","values","setValues","handleFieldChange","event","persist","currentValues","target","value","clsx","title","container","spacing","item","md","xs","fullWidth","label","onChange","email","variant","phone","state","country","address1","address2","verified","discountedPrices","onClick","defaultProps","marginTop","BaseModal","Modal","Card","CardHeader","Divider","CardContent","Typography","CardActions","Button","paddingTop","paddingBottom","divider","colors","marginBottom","section","Modals","openBase","setOpenBase","openCustomer","setOpenCustomer","Page","Container","gutterBottom"],"mappings":"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","file":"static/js/34.1095ada1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(50%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  TextField,\n  Switch,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction CustomerEditModal({\n  open, onClose, customer, className, ...rest\n}) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    ...customer\n  });\n\n  const handleFieldChange = (event) => {\n    event.persist();\n    setValues((currentValues) => ({\n      ...currentValues,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <form>\n          <CardHeader title=\"Edit Customer\" />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleFieldChange}\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Full name\"\n                  name=\"name\"\n                  onChange={handleFieldChange}\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Phone number\"\n                  name=\"phone\"\n                  onChange={handleFieldChange}\n                  value={values.phone}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"State/Region\"\n                  name=\"state\"\n                  onChange={handleFieldChange}\n                  value={values.state}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Country\"\n                  name=\"country\"\n                  onChange={handleFieldChange}\n                  value={values.country}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Address 1\"\n                  name=\"address1\"\n                  onChange={handleFieldChange}\n                  value={values.address1}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Address 2\"\n                  name=\"address2\"\n                  onChange={handleFieldChange}\n                  value={values.address2}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item />\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Email Verified</Typography>\n                <Typography variant=\"body2\">\n                  Disabling this will automatically send the user a verification\n                  email\n                </Typography>\n                <Switch\n                  checked={values.verified}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"verified\"\n                  onChange={handleFieldChange}\n                  value={values.verified}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Discounted Prices</Typography>\n                <Typography variant=\"body2\">\n                  This will give the user discountedprices for all products\n                </Typography>\n                <Switch\n                  checked={values.discountedPrices}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"discountedPrices\"\n                  onChange={handleFieldChange}\n                  value={values.discountedPrices}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions className={classes.actions}>\n            <Button onClick={onClose}>\n              Close\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={onClose}\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nCustomerEditModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nCustomerEditModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CustomerEditModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Typography,\n  Divider,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    height: 200\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction BaseModal({\n  open, onClose, className, ...rest\n}) {\n  const classes = useStyles();\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <CardHeader title=\"Simple Modal\" />\n        <Divider />\n        <CardContent>\n          <Typography variant=\"body1\">\n            One fine body...\n          </Typography>\n        </CardContent>\n        <Divider />\n        <CardActions className={classes.actions}>\n          <Button onClick={onClose}>\n            Dismiss\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={onClose}\n            variant=\"contained\"\n          >\n            Confirm\n          </Button>\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n}\n\nBaseModal.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nBaseModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default BaseModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Divider,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  colors\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerEditModal from 'src/views/CustomerManagementDetails/Summary/CustomerEditModal';\nimport BaseModal from './BaseModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  section: {\n    '& + &': {\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\n\nfunction Modals() {\n  const classes = useStyles();\n  const [openBase, setOpenBase] = useState(false);\n  const [openCustomer, setOpenCustomer] = useState(false);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Modals\"\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"overline\">\n          Components\n        </Typography>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n          Modals\n        </Typography>\n        <Divider className={classes.divider} />\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            Simple Modal\n          </Typography>\n          <Card>\n            <CardContent>\n              <Button\n                color=\"primary\"\n                onClick={() => setOpenBase(true)}\n                variant=\"contained\"\n              >\n                Open Base Modal\n              </Button>\n            </CardContent>\n          </Card>\n          <BaseModal\n            onClose={() => setOpenBase(false)}\n            open={openBase}\n          />\n        </div>\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            Example Modal\n          </Typography>\n          <Card>\n            <CardContent>\n              <Button\n                color=\"primary\"\n                onClick={() => setOpenCustomer(true)}\n                variant=\"contained\"\n              >\n                Open Example Modal\n              </Button>\n            </CardContent>\n          </Card>\n          <CustomerEditModal\n            customer={{\n              email: 'j.doe@domain.com',\n              name: 'J Doe',\n              phone: '+4 505 950 823',\n              country: 'USA',\n              state: 'California',\n              address1: '',\n              address2: '',\n              verified: true,\n              discountedPrices: false\n            }}\n            onClose={() => setOpenCustomer(false)}\n            open={openCustomer}\n          />\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Modals;\n"],"sourceRoot":""}